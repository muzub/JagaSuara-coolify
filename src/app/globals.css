@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 40 50% 98%; /* Very light, soft cream */
    --foreground: 40 10% 20%; /* Dark, warm gray */

    --card: 40 50% 98%;
    --card-foreground: 40 10% 20%;

    --popover: 40 50% 98%;
    --popover-foreground: 40 10% 20%;

    --primary: 30 65% 60%;    /* Muted Orange/Coral */
    --primary-foreground: 40 10% 98%; /* Almost white, warm tint */

    --secondary: 40 30% 92%; /* Lighter soft cream */
    --secondary-foreground: 40 10% 25%;

    --muted: 40 20% 88%;
    --muted-foreground: 40 10% 45%;

    --accent: 30 65% 60%; /* Same as primary for consistency */
    --accent-foreground: 40 10% 98%;

    --destructive: 4 90% 58%; /* Noisy Red - Kept for functional clarity */
    --destructive-foreground: 0 0% 98%;

    --border: 40 20% 90%;
    --input: 40 30% 93%;
    --ring: 30 65% 60%; /* Same as new primary for focus rings */

    --radius: 0.5rem;

    /* Custom noise level colors - Kept for functional clarity */
    --color-quiet: 120 39% 50%; /* Green */
    --color-quiet-foreground: 0 0% 100%; /* White */
    --color-medium: 55 100% 61%; /* Yellow */
    --color-medium-foreground: 0 0% 0%; /* Black for yellow bg */
    --color-noisy: 4 90% 58%; /* Red */
    --color-noisy-foreground: 0 0% 100%; /* White */
    --color-idle: 220 15% 70%; /* Neutral Gray for Idle - Kept for functional clarity */
    --color-idle-foreground: 220 15% 25%;
    --color-error: 0 70% 55%; /* A distinct error red - Kept for functional clarity */
    --color-error-foreground: 0 0% 100%;

    /* Sidebar colors adjusted for new theme */
    --sidebar-background: 40 30% 96%; 
    --sidebar-foreground: 40 10% 25%; 
    --sidebar-primary: 30 50% 40%;    
    --sidebar-primary-foreground: 40 20% 95%; 
    --sidebar-accent: 40 20% 92%;     
    --sidebar-accent-foreground: 40 10% 30%; 
    --sidebar-border: 40 15% 88%;    
    --sidebar-ring: 30 65% 60%;     

     /* Chart colors (can be kept as is or adjusted if charts are used) */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }

  .dark {
    --background: 40 10% 12%;  /* Very dark, warm gray */
    --foreground: 40 20% 88%;  /* Light, warm cream */

    --card: 40 10% 12%;
    --card-foreground: 40 20% 88%;

    --popover: 40 10% 12%;
    --popover-foreground: 40 20% 88%;

    --primary: 30 60% 70%;     /* Lighter Muted Orange/Coral for dark mode */
    --primary-foreground: 40 10% 15%;

    --secondary: 40 8% 18%; /* Darker warm gray */
    --secondary-foreground: 40 15% 80%;

    --muted: 40 6% 22%;
    --muted-foreground: 40 10% 55%;

    --accent: 30 60% 70%;
    --accent-foreground: 40 10% 15%;

    --destructive: 4 80% 65%; /* Lighter Noisy Red for dark mode - Kept for functional clarity */
    --destructive-foreground: 0 0% 98%;

    --border: 40 8% 25%;
    --input: 40 8% 28%;
    --ring: 30 60% 70%;

    /* Custom noise level colors for dark mode - Kept for functional clarity */
    --color-quiet-foreground: 0 0% 100%;
    --color-medium-foreground: 0 0% 0%;
    --color-noisy-foreground: 0 0% 100%;
    --color-idle-foreground: 220 20% 90%; /* Kept existing idle dark fg for contrast */
    --color-error-foreground: 0 0% 100%;
    
    /* Sidebar colors adjusted for new dark theme */
    --sidebar-background: 40 8% 10%;   
    --sidebar-foreground: 40 15% 85%;  
    --sidebar-primary: 30 55% 65%;     
    --sidebar-primary-foreground: 40 5% 10%;
    --sidebar-accent: 40 6% 15%;      
    --sidebar-accent-foreground: 40 15% 80%;
    --sidebar-border: 40 6% 18%;       
    --sidebar-ring: 30 60% 70%;     
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    font-family: var(--font-geist-sans), system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    @apply bg-background text-foreground;
  }
}

/* Noise Level Animations - Container Animations */

/* Classic Glow (Container) */
@keyframes quiet-glow {
  0%, 100% {
    opacity: 0.8;
    box-shadow: 0 0 15px -5px currentColor; 
  }
  50% {
    opacity: 1;
    box-shadow: 0 0 25px 0px currentColor; 
  }
}
.animate-quiet-state {
  animation: quiet-glow 3.5s infinite ease-in-out; 
}
/* Classic Glow (Icon) - Leaf Sway */
.animate-quiet-state .noise-icon-wrapper {
  animation: classic-quiet-icon-sway 2s ease-in-out infinite alternate;
}
@keyframes classic-quiet-icon-sway {
  from { transform: rotate(-3deg); }
  to { transform: rotate(3deg); }
}


@keyframes medium-pulse-stronger {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 20px 0px currentColor;
  }
  50% {
    transform: scale(1.04); 
    box-shadow: 0 0 35px 5px currentColor; 
  }
}
.animate-medium-state {
  animation: medium-pulse-stronger 1.8s infinite ease-in-out;
}
/* Classic Medium (Icon) - Subtle Pulse */
.animate-medium-state .noise-icon-wrapper {
  animation: classic-medium-icon-pulse 1.8s infinite ease-in-out;
}
@keyframes classic-medium-icon-pulse {
  0%, 100% { transform: scale(1); opacity: 0.9; }
  50% { transform: scale(1.05); opacity: 1; }
}


@keyframes noisy-alert-throb {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 25px 5px hsla(var(--color-noisy), 0.7); 
  }
  50% {
    transform: scale(1.05); 
    box-shadow: 0 0 45px 15px hsla(var(--color-noisy), 0.9); 
  }
}
.animate-noisy-state {
  animation: noisy-alert-throb 0.5s infinite ease-in-out; 
}
/* Classic Noisy (Icon) - Quick Shake */
.animate-noisy-state .noise-icon-wrapper {
  animation: classic-noisy-icon-shake 0.2s infinite linear;
}
@keyframes classic-noisy-icon-shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-2px); }
  75% { transform: translateX(2px); }
}


/* Animation Style: Subtle Breathe (Container) */
@keyframes quiet-breathe {
  0%, 100% { transform: scale(1); opacity: 0.9; }
  50% { transform: scale(1.02); opacity: 1; }
}
.animate-quiet-breathe { animation: quiet-breathe 4s infinite ease-in-out; }
/* Subtle Breathe (Icon) - Feather Bob */
.animate-quiet-breathe .noise-icon-wrapper {
  animation: breathe-quiet-icon-bob 2.5s ease-in-out infinite alternate;
}
@keyframes breathe-quiet-icon-bob {
  from { transform: translateY(0); }
  to { transform: translateY(-6px); }
}


@keyframes medium-breathe-pulse {
  0%, 100% { transform: scale(1); box-shadow: 0 0 15px -5px currentColor; }
  50% { transform: scale(1.03); box-shadow: 0 0 25px 0px currentColor; }
}
.animate-medium-breathe-pulse { animation: medium-breathe-pulse 2.5s infinite ease-in-out; }
/* Subtle Breathe Medium (Icon) - Waves Flow */
.animate-medium-breathe-pulse .noise-icon-wrapper {
  animation: breathe-medium-icon-flow 3s ease-in-out infinite;
}
@keyframes breathe-medium-icon-flow {
  0%, 100% { transform: translateX(-2px) scale(1); }
  50% { transform: translateX(2px) scale(1.03); }
}


@keyframes noisy-shake { /* Container shake */
  0%, 100% { transform: translateX(0); box-shadow: 0 0 25px 5px hsla(var(--color-noisy), 0.7); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
  20%, 40%, 60%, 80% { transform: translateX(3px); }
  50% { box-shadow: 0 0 45px 15px hsla(var(--color-noisy), 0.9); }
}
.animate-noisy-shake { animation: noisy-shake 0.4s infinite linear; }
/* Subtle Breathe Noisy (Icon) - Speaker Thump */
.animate-noisy-shake .noise-icon-wrapper {
  animation: breathe-noisy-icon-thump 0.4s infinite ease-out;
}
@keyframes breathe-noisy-icon-thump {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}


/* Animation Style: Gentle Spin & Expand (Container) */
.animate-quiet-slow-spin { /* No specific container animation beyond icon logic */ }
/* Gentle Spin & Expand (Icon) - Sun Spin (already defined) */
@keyframes quiet-slow-spin-icon {
  from { transform: rotate(0deg) scale(0.95); } /* Added scale for more dynamic feel */
  to { transform: rotate(360deg) scale(1.05); }
}
.animate-quiet-slow-spin .noise-icon-wrapper { 
  animation: quiet-slow-spin-icon 15s linear infinite alternate; /* Added alternate */
}


@keyframes medium-pulse-expand-circle {
  0%, 100% { transform: scale(1); border-width: 4px; }
  50% { transform: scale(1.05); border-width: 6px; }
}
.animate-medium-pulse-expand-circle { animation: medium-pulse-expand-circle 2s infinite ease-in-out; }
/* Gentle Spin & Expand Medium (Icon) - Disc3 Rotate Pulse */
.animate-medium-pulse-expand-circle .noise-icon-wrapper {
  animation: spin-expand-medium-icon-rotate-pulse 4s ease-in-out infinite;
}
@keyframes spin-expand-medium-icon-rotate-pulse {
  0% { transform: rotate(0deg) scale(1); }
  50% { transform: rotate(180deg) scale(1.05); }
  100% { transform: rotate(360deg) scale(1); }
}

@keyframes noisy-fast-spin-alert-icon {
  from { transform: rotate(0deg) scale(1); } /* Added scale */
  to { transform: rotate(360deg) scale(1.1); }
}
@keyframes noisy-border-flash-strong {
  0%, 100% { border-color: hsl(var(--color-noisy)); box-shadow: 0 0 25px 5px hsla(var(--color-noisy), 0.7); }
  50% { border-color: hsl(var(--primary)); box-shadow: 0 0 50px 20px hsla(var(--color-noisy), 1); }
}
.animate-noisy-fast-spin-alert .noise-icon-wrapper { 
  animation: noisy-fast-spin-alert-icon 0.8s linear infinite; /* Slightly slower for icon clarity */
}
.animate-noisy-fast-spin-alert { animation: noisy-border-flash-strong 0.6s infinite ease-in-out; }


/* Animation Style: Focus Shift (Container) */
@keyframes quiet-focus-shadow {
  0%, 100% { box-shadow: 0 0 10px -5px currentColor; opacity: 0.8; }
  50% { box-shadow: 0 0 20px -3px currentColor; opacity: 1; }
}
.animate-quiet-focus-shadow { animation: quiet-focus-shadow 3.5s infinite ease-in-out; }
/* Focus Shift Quiet (Icon) - Eye Blink */
.animate-quiet-focus-shadow .noise-icon-wrapper {
  animation: focus-quiet-icon-blink 5s infinite step-start;
}
@keyframes focus-quiet-icon-blink {
  0%, 90% { opacity: 1; }
  95%, 100% { opacity: 0.3; } /* Quick blink */
}


@keyframes medium-border-throb {
  0%, 100% { border-width: 4px; opacity: 0.8; }
  50% { border-width: 7px; opacity: 1; }
}
.animate-medium-border-throb { animation: medium-border-throb 1.8s infinite ease-in-out; }
/* Focus Shift Medium (Icon) - Crosshair Scan */
.animate-medium-border-throb .noise-icon-wrapper {
  animation: focus-medium-icon-scan 2.5s ease-in-out infinite;
}
@keyframes focus-medium-icon-scan {
  0%, 100% { transform: scale(1) rotate(0deg); }
  25% { transform: scale(1.05) rotate(-5deg); }
  75% { transform: scale(0.95) rotate(5deg); }
}

@keyframes noisy-vibrate-glow { /* Container animation */
  0% { transform: translate(0, 0); box-shadow: 0 0 30px 8px hsla(var(--color-noisy), 0.8); }
  10% { transform: translate(-1px, -2px); }
  20% { transform: translate(-3px, 0px); }
  30% { transform: translate(3px, 2px); }
  40% { transform: translate(1px, -1px); }
  50% { transform: translate(-1px, 2px); box-shadow: 0 0 50px 15px hsla(var(--color-noisy), 1); }
  60% { transform: translate(-3px, 1px); }
  70% { transform: translate(3px, 1px); }
  80% { transform: translate(-1px, -1px); }
  90% { transform: translate(1px, 2px); }
  100% { transform: translate(0, 0); box-shadow: 0 0 30px 8px hsla(var(--color-noisy), 0.8); }
}
.animate-noisy-vibrate-glow { animation: noisy-vibrate-glow 0.3s infinite linear; }
/* Focus Shift Noisy (Icon) - Focus Pulse (already provided, good to keep) */
.animate-noisy-vibrate-glow .noise-icon-wrapper {
  animation: focus-noisy-icon-pulse 0.5s ease-in-out infinite;
}
@keyframes focus-noisy-icon-pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}


/* Animation Style: Minimalist Pulse (Container) */
@keyframes quiet-opacity-fade {
  0%, 100% { opacity: 0.7; }
  50% { opacity: 1; }
}
.animate-quiet-opacity-fade { animation: quiet-opacity-fade 4s infinite ease-in-out; }
/* Minimalist Quiet (Icon) - CircleDot subtle grow */
.animate-quiet-opacity-fade .noise-icon-wrapper {
  animation: minimalist-quiet-icon-grow 4s ease-in-out infinite;
}
@keyframes minimalist-quiet-icon-grow {
  0%, 100% { transform: scale(0.98); opacity: 0.8;}
  50% { transform: scale(1.02); opacity: 1;}
}

/* Renamed container class to avoid conflict, and adjusted animation for icon wrapper */
.animate-medium-scale-subtle-icon-container {} /* Can be empty if only icon animates */
@keyframes medium-scale-subtle-icon {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.08); }
}
.animate-medium-scale-subtle-icon-container .noise-icon-wrapper { 
  animation: medium-scale-subtle-icon 2.2s infinite ease-in-out; 
}


@keyframes noisy-border-flash-minimal {
  0%, 49% { border-width: 4px; border-color: hsl(var(--color-noisy)); }
  50%, 74% { border-width: 8px; border-color: hsl(var(--primary)); }
  75%, 100% { border-width: 4px; border-color: hsl(var(--color-noisy)); }
}
.animate-noisy-border-flash-minimal { animation: noisy-border-flash-minimal 0.7s infinite step-end; }
/* Minimalist Noisy (Icon) - AlertCircle Flash */
.animate-noisy-border-flash-minimal .noise-icon-wrapper {
  animation: minimalist-noisy-icon-flash 0.7s infinite step-end;
}
@keyframes minimalist-noisy-icon-flash {
  0%, 49% { opacity: 1; transform: scale(1); }
  50%, 74% { opacity: 0.7; transform: scale(1.1); }
  75%, 100% { opacity: 1; transform: scale(1); }
}


/* Helper classes for status colors */
.bg-status-quiet { background-color: hsl(var(--color-quiet)); }
.text-status-quiet-fg { color: hsl(var(--color-quiet-foreground)); }
.border-status-quiet { border-color: hsl(var(--color-quiet)) }


.bg-status-medium { background-color: hsl(var(--color-medium)); }
.text-status-medium-fg { color: hsl(var(--color-medium-foreground)); }
.border-status-medium { border-color: hsl(var(--color-medium)) }


.bg-status-noisy { background-color: hsl(var(--color-noisy)); }
.text-status-noisy-fg { color: hsl(var(--color-noisy-foreground)); }
.border-status-noisy { border-color: hsl(var(--color-noisy)) }

.bg-status-idle { background-color: hsl(var(--color-idle)); }
.text-status-idle-fg { color: hsl(var(--color-idle-foreground)); }
.border-status-idle { border-color: hsl(var(--color-idle)) }

.bg-status-error { background-color: hsl(var(--color-error)); }
.text-status-error-fg { color: hsl(var(--color-error-foreground)); }
.border-status-error { border-color: hsl(var(--color-error)) }
